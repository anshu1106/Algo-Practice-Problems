import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;


public class Euler15 {
	static long routes[][]=new long[500][500];
	public static void main(String args[])
	{
		for (int i=0;i<routes.length;i++)
		{
			for(int j=0;j<routes[0].length;j++)
			{
				if(i==0 && j == 0)
				{
					routes[i][j]=2%(1000000000+7);
					
				}
				else if(i== 0 && j>0 )
				{
					routes[i][j]=(routes[i][j-1]+1)%(1000000000+7);
				}
				else if(j==0 && i>0)
				{
					routes[i][j]=(routes[i-1][j]+1)%(1000000000+7);
				}
				else
				{
					routes[i][j]=(routes[i-1][j]+routes[i][j-1])%(1000000000+7);
				}
						
			}
		}
			
		int cases;
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		try {
			cases=Integer.parseInt(br.readLine());
			int n;
			for(int count=0;count<cases;count++)
			{
				n=Integer.parseInt(br.readLine());
			}

		} catch (NumberFormatException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
			
		
	}

}
